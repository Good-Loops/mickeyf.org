@use 'colors' as *;
@use 'shadows' as *;
@use 'variables' as *;
@use 'fonts' as *;

//////////////////////// Typography ////////////////////////
// Main title coloring
@mixin title-coloring {
    color: $primary-dark;
    -webkit-text-stroke: .05em rgba($white, .3);
    text-shadow: $title-text-shadow;
}

// Component title styling
@mixin component-title {
    @include title-coloring;
    font-size: $font-size-l;
}

///////////////////////// Components ////////////////////////
// Default component styling
@mixin default-component {
    display: grid;
    row-gap: 6em;

    justify-items: center;

    &__title {
        @include component-title;
    }
}


//////////////////////// Forms ////////////////////////
/// Default form styling
@mixin user-conection-form {
    display: grid;
    row-gap: 3rem;

    justify-items: center;

    margin-bottom: 10svh;

    &__title {
        font-size: $font-size-m;
        @include title-coloring;
    }

    &__form-wrapper {
        background: $component-bg-gradient;
        border-radius: 1.5em;

        padding-block: 4em;
        width: 80%;
        justify-self: center;
    }

    &__form {
        grid-column: 2 / 3;

        display: grid;
        grid-gap: 2rem;
        grid-template-columns: repeat(3, 1fr);
    }

    &__input {
        background-color: $primary-light;
        border: .15em solid $gray-light;
        border-radius: .4em;

        transition: border 0.7s;
        outline: none;

        font-family: var(--font);
        font-size: 3.8rem;
        color: $gray;

        grid-column: 1 / 4;
        justify-self: center;
        width: 80%;

        padding: .2em;

        &:focus {
            border: .15em solid $gray;
        }

        &--username {
            grid-row: 1 / 2;
        }

        &--email {
            grid-row: 2 / 3;
        }

        &--password {
            grid-row: 3 / 4;
        }

        &--btn {
            width: 100%;
            margin-top: 2rem;
            font-size: 3rem;

            grid-row: 4 / 5;
            grid-column: 2 / 3;

            border: .18em solid $gray-light;
            border-radius: .5em;
            transition: border 0.7s;

            &:active {
                transform: scale(.85);
            }

            &:hover {
                cursor: $cursor-hover;
                border: .18em solid $gray;
            }
        }
    }
}


//////////////////////// Buttons ////////////////////////
// Default button styling
@mixin default-btn {
    padding: .5em;
    padding-top: .4em;

    font-size: $font-size-xs;

    text-shadow: $label-text-shadow;
    color: $primary-dark;

    border: .12em solid $primary-dark;
    border-radius: .6em;

    box-shadow:
        0 0 .6em rgba($white, .6),
        0 0 0em rgba($primary, .5) inset,
        0 0 0em $primary;

    transition:
        box-shadow .5s linear,
        scale .7s linear,
        text-shadow 1s ease-in-out,
        color 1.5s,
        border-color 2s;

    z-index: $back-2;
    user-select: none;
}

// Default button hover effect
@mixin default-btn-hover {
    color: $white;
    border-color: rgba($white, .3);
    box-shadow: 0 0 0em rgba($white, .3),
        0 0 5em rgba($primary, .5) inset,
        0 0 .6em rgba($primary, .5);

    text-shadow: 0 0 .12em $primary;

    scale: 1.04;

    cursor: $cursor-hover;
}

// Default button active effect
@mixin default-btn-active {
    scale: .2;
}

// Menu button defaults
@mixin default-menu-btn {
    display: none;

    fill: $primary-light;

    background: none;
    border: none;

    position: fixed;
    top: -2.8em;
    left: -8.5em;

    transform: scale(.35);
}

///////////////////////// UI Elements ////////////////////////
// Default option styling
@mixin default-option {
    cursor: $cursor-hover;

    box-shadow: $darl-box-shadow-s;

    padding-block: .5em;
    padding-inline: 1em;

    border-radius: $default-border-radius;

    transition: background-color .3s;

    &:hover {
        background-color: $primary-darker;
    }

    &-btn {
        white-space: nowrap;
        color: $white-darker;
        font-size: $font-size-xxs;
    }
}

//////////////////////// Social Media ////////////////////////
// Social media button styling
@mixin social-media-btn {
    @include default-btn;
    padding-block: 2em;
    width: 13em;
    scale: .8;

    fill: $primary-light;

    &:hover {
        @include default-btn-hover;
    }

    &:active {
        @include default-btn-active;
    }
}

//////////////////////// Shadows ////////////////////////
// Box shadow effect
@mixin box-shadow-effect {
    box-shadow:
            0 0 .6em rgba($white, .6),
            0 0 0em rgba($primary, .5) inset,
            0 0 0em $primary;
    
    transition:
        box-shadow .5s linear,
        scale .7s linear,
        text-shadow 1s ease-in-out,
        color 1.5s,
        border-color 2s;

    z-index: $back-2;
    user-select: none;
}

// Canvas shadow effect
@mixin canvas-shadow-effect {
    box-shadow: $canvas-shadow;
}

// Dark box shadow effect
@mixin dark-box-shadow-effect {
    box-shadow: $dark-box-shadow;
}

//////////////////////// Navigation ////////////////////////
// Default nav link styling
@mixin nav-link {
    text-decoration: none;
    
    color: rgba($primary-light, .8);

    transition: text-shadow 1.5s ease-in-out;

    &:hover,
    &:focus {
        text-shadow: $label-text-shadow;
    }
}

// Default nav item styling
@mixin nav-item {
    transition: transform .5s ease-in-out;
    
    padding-inline: .5em;

    white-space: nowrap;

    &:hover,
    &:focus {
        transform: scale(1.1);
    }

    &:active {
        transform: scale(.5);
    }
}

//////////////////////// Media Queries ////////////////////////
// This mixin generates media queries for the given map
// Maps are defined in the variables file
@mixin generate-media-queries($map) {
    @each $bp, $bp-info in $map { // Loop through the breakpoints
        @media only screen and (max-width: map-get($bp-info, 'width')) { // Generate media queries for each breakpoint
            @each $selector, $properties in map-get($bp-info, 'selectors') { // Loop through the selectors
                #{$selector} { // Generate the selector
                    @each $property, $value in $properties { // Loop through the properties
                        #{$property}: $value; // Generate the property
                    }
                }
            }
        }
    }
}